[0m[[0m[0mdebug[0m] [0m[0m> Exec(early(addDefaultCommands), None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(addDefaultCommands, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(early(initialize), None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(initialize, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(boot, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(writeSbtVersion, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(reload, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(sbtStashOnFailure, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(onFailure loadFailed, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(loadp, None, None)[0m
[0m[[0m[0minfo[0m] [0m[0mwelcome to sbt 1.4.6 (Ubuntu Java 11.0.9.1)[0m
[0m[[0m[0mdebug[0m] [0m[0mLoad.defaultLoad until apply took 2699.945615ms[0m
[0m[[0m[0mdebug[0m] [0m[0m          Load.loadUnit: plugins took 341.517255ms[0m
[0m[[0m[0mdebug[0m] [0m[0m          Load.loadUnit: defsScala took 0.726324ms[0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Scanning directory /home/gabriele/Documents/projet-sdtd/spark/wordcount/project[0m
[0m[[0m[0mdebug[0m] [0m[0m            Load.loadUnit: mkEval took 23.299828ms[0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Found non-root projects [0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Done in /home/gabriele/Documents/projet-sdtd/spark/wordcount/project, returning: ()[0m
[0m[[0m[0mdebug[0m] [0m[0mdeducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))[0m
[0m[[0m[0mdebug[0m] [0m[0m  :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)[0m
[0m[[0m[0mdebug[0m] [0m[0mPlugins.deducer#function took 107.158877 ms[0m
[0m[[0m[0minfo[0m] [0m[0mloading settings for project wordcount-build from assembly.sbt ...[0m
[0m[[0m[0mdebug[0m] [0m[0m              Load.resolveProject(wordcount-build) took 317.334994ms[0m
[0m[[0m[0mdebug[0m] [0m[0m            Load.loadTransitive: finalizeProject(Project(id wordcount-build, base: /home/gabriele/Documents/projet-sdtd/spark/wordcount/project, plugins: List(<none>))) took 572.430969ms[0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Done in /home/gabriele/Documents/projet-sdtd/spark/wordcount/project, returning: (wordcount-build)[0m
[0m[[0m[0mdebug[0m] [0m[0m          Load.loadUnit: loadedProjectsRaw took 1782.796718ms[0m
[0m[[0m[0mdebug[0m] [0m[0m          Load.loadUnit: cleanEvalClasses took 67.609496ms[0m
[0m[[0m[0mdebug[0m] [0m[0m        Load.loadUnit(file:/home/gabriele/Documents/projet-sdtd/spark/wordcount/project/, ...) took 2237.762962ms[0m
[0m[[0m[0mdebug[0m] [0m[0m      Load.apply: load took 2942.71838ms[0m
[0m[[0m[0mdebug[0m] [0m[0m      Load.apply: resolveProjects took 21.067867ms[0m
[0m[[0m[0mdebug[0m] [0m[0m      Load.apply: finalTransforms took 297.95089ms[0m
[0m[[0m[0mdebug[0m] [0m[0m      Load.apply: config.delegates took 24.30735ms[0m
[0m[[0m[0mdebug[0m] [0m[0m      Load.apply: Def.make(settings)... took 2752.280858ms[0m
[0m[[0m[0mdebug[0m] [0m[0m      Load.apply: structureIndex took 487.399114ms[0m
[0m[[0m[0mdebug[0m] [0m[0m      Load.apply: mkStreams took 3.511524ms[0m
[0m[[0m[0minfo[0m] [0m[0mloading project definition from /home/gabriele/Documents/projet-sdtd/spark/wordcount/project[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning task... Cancel: Signal, check cycles: false, forcegc: true[0m
[0m[[0m[0mdebug[0m] [0m[0m    Load.loadUnit: plugins took 15610.073463ms[0m
[0m[[0m[0mdebug[0m] [0m[0m    Load.loadUnit: defsScala took 0.01959ms[0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Scanning directory /home/gabriele/Documents/projet-sdtd/spark/wordcount[0m
[0m[[0m[0mdebug[0m] [0m[0m      Load.loadUnit: mkEval took 3.326031ms[0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Found non-root projects [0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Done in /home/gabriele/Documents/projet-sdtd/spark/wordcount, returning: ()[0m
[0m[[0m[0mdebug[0m] [0m[0mdeducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbtassembly.AssemblyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbtassembly.AssemblyPlugin)))))[0m
[0m[[0m[0mdebug[0m] [0m[0m  :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbtassembly.AssemblyPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)[0m
[0m[[0m[0mdebug[0m] [0m[0mPlugins.deducer#function took 12.09682 ms[0m
[0m[[0m[0minfo[0m] [0m[0mloading settings for project wordcount from wordcount.sbt ...[0m
[0m[[0m[0mdebug[0m] [0m[0m        Load.resolveProject(wordcount) took 240.977142ms[0m
[0m[[0m[0mdebug[0m] [0m[0m      Load.loadTransitive: finalizeProject(Project(id wordcount, base: /home/gabriele/Documents/projet-sdtd/spark/wordcount, plugins: List(<none>))) took 259.602509ms[0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Done in /home/gabriele/Documents/projet-sdtd/spark/wordcount, returning: (wordcount)[0m
[0m[[0m[0mdebug[0m] [0m[0m    Load.loadUnit: loadedProjectsRaw took 733.55353ms[0m
[0m[[0m[0mdebug[0m] [0m[0m    Load.loadUnit: cleanEvalClasses took 7.640508ms[0m
[0m[[0m[0mdebug[0m] [0m[0m  Load.loadUnit(file:/home/gabriele/Documents/projet-sdtd/spark/wordcount/, ...) took 16361.158048ms[0m
[0m[[0m[0mdebug[0m] [0m[0mLoad.apply: load took 16457.273947ms[0m
[0m[[0m[0mdebug[0m] [0m[0mLoad.apply: resolveProjects took 0.448907ms[0m
[0m[[0m[0mdebug[0m] [0m[0mLoad.apply: finalTransforms took 85.532437ms[0m
[0m[[0m[0mdebug[0m] [0m[0mLoad.apply: config.delegates took 2.260327ms[0m
[0m[[0m[0mdebug[0m] [0m[0mLoad.apply: Def.make(settings)... took 816.043768ms[0m
[0m[[0m[0mdebug[0m] [0m[0mLoad.apply: structureIndex took 275.010478ms[0m
[0m[[0m[0mdebug[0m] [0m[0mLoad.apply: mkStreams took 0.007567ms[0m
[0m[[0m[0minfo[0m] [0m[0mset current project to WordCounter (in build file:/home/gabriele/Documents/projet-sdtd/spark/wordcount/)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(sbtPopOnFailure, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(resumeFromFailure, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(notifyUsersAboutShell, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(iflast shell, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(package, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0mEvaluating tasks: Compile / package[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning task... Cancel: Signal, check cycles: false, forcegc: true[0m
